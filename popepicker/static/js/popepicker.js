// Generated by CoffeeScript 1.3.3
(function() {
  var HomeView, Pope, PopeCollection, PopeView, Router,
    _this = this,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.popepicker = {};

  this.popepicker.init = function() {
    _this.popepicker.router = new Router();
    return Backbone.history.start({
      pushState: true
    });
  };

  Router = (function(_super) {

    __extends(Router, _super);

    function Router() {
      return Router.__super__.constructor.apply(this, arguments);
    }

    Router.prototype.routes = {
      '': 'home'
    };

    Router.prototype.home = function() {
      var collection, view;
      collection = new PopeCollection();
      view = new HomeView({
        router: this,
        collection: collection
      });
      return $('#__content').append(view.render().el);
    };

    return Router;

  })(Backbone.Router);

  HomeView = (function(_super) {

    __extends(HomeView, _super);

    function HomeView() {
      return HomeView.__super__.constructor.apply(this, arguments);
    }

    HomeView.prototype.initialize = function(options) {
      this.router = options.router;
      return this.collection = options.collection;
    };

    HomeView.prototype.render = function() {
      var template;
      template = _.template(templates.home_page);
      $(this.el).append(template);
      this.collection.fetch({
        success: function(popes) {
          return console.log(popes);
        }
      });
      return this;
    };

    return HomeView;

  })(Backbone.View);

  PopeView = (function(_super) {

    __extends(PopeView, _super);

    function PopeView() {
      return PopeView.__super__.constructor.apply(this, arguments);
    }

    PopeView.prototype.initialize = function(options) {
      this.router = options.router;
      return this.model = options.model;
    };

    PopeView.prototype.render = function(options) {
      var template;
      template = _.template(templates.pope, {
        pope: this.model
      });
      $(this.el).append(template);
      return this;
    };

    return PopeView;

  })(Backbone.View);

  Pope = (function(_super) {

    __extends(Pope, _super);

    function Pope() {
      return Pope.__super__.constructor.apply(this, arguments);
    }

    return Pope;

  })(Backbone.Model);

  PopeCollection = (function(_super) {

    __extends(PopeCollection, _super);

    function PopeCollection() {
      return PopeCollection.__super__.constructor.apply(this, arguments);
    }

    PopeCollection.prototype.url = '/data/popes/';

    PopeCollection.prototype.model = Pope;

    return PopeCollection;

  })(Backbone.Collection);

}).call(this);
